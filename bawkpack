#!/bin/sh

#     ____
#    / __ )            __                  __
#   / __  /__ __    __/ /__ ___  ___ _____/ /__
#  / /_/ / _ `/ |/|/ /  '_// _ \/ _ `/ __/  '_/
# /_____/\_,_/|__,__/_/\_\/ .__/\_,_/\__/_/\_\
#                        /_/

# File:         bawkpack
# Description:  Packages list installer that SuperB
# Author:       NNB
#               └─ https://github.com/NNBnh
# URL:          https://github.com/NNBnh/bawkpack
# License:      GPLv3

#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.


# Values
pwd="$PWD"

list=${1:-$BAWKPACK_LIST}
[ ! -f "$list"   ] && echo 'Packages list is not found, please `export BAWKPACK_LIST=path/to/packages`' && exit 1

bawkpack_local="${XDG_CACHE_HOME:-"$HOME/.local/share"}/bawkpack"
bawkpack_cache="${XDG_CACHE_HOME:-"$HOME/.cache"}/bawkpack_cache"

if   [ -f '/bin/pacman' ]; then
	mainpm='Pacman'
	sudo pacman --sync --refresh --sysupgrade --noconfirm --needed gawk
elif [ -f '/bin/apt'  ]; then
	mainpm='APT'
	sudo apt update  --assume-yes
	sudo apt upgrade --assume-yes
	sudo apt install --assume-yes gawk
elif [ -f '/bin/xbps-install' ]; then
	mainpm='XBPS'
	sudo xbps-install --sync --yes --update
	sudo xbps-install --sync --yes void-repo-nonfree void-repo-multilib void-repo-multilib-nonfree void-repo-debug gawk
else
	echo "Packages manager not found"
	exit 1
fi

                             pms="$mainpm"
[ "$mainpm"  = 'Pacman' ] && pms="$pms AUR"
                             pms="$pms Flatpak"
[ "$mainpm" != 'XBPS'   ] && pms="$pms Snap"


# Functions
setup_aur() {
	sudo pacman --sync --refresh --noconfirm --needed git base-devel

	git clone https://aur.archlinux.org/yay.git "$bawkpack_local/yay"
	cd "$bawkpack_local/yay"
	makepkg -si
	cd $pwd
}

setup_flatpak() {
	if   [ $mainpm = 'Pacman' ]; then sudo pacman --sync --refresh --noconfirm --needed flatpak
	elif [ $mainpm = 'APT'    ]; then sudo apt install --assume-yes flatpak gnome-software-plugin-flatpak
	elif [ $mainpm = 'XBPS'   ]; then sudo xbps-install --sync --yes flatpak
	fi

	flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
}

setup_snap() {
	if   [ $mainpm = 'Pacman' ]; then
		sudo pacman --sync --refresh --noconfirm --needed git

		git clone https://aur.archlinux.org/snapd.git "$bawkpack_local/snap"
		cd "$bawkpack_local/snap"
		makepkg -si
		cd $pwd

		sudo systemctl enable --now snapd.socket
		sudo ln -s /var/lib/snapd/snap /snap
	elif [ $mainpm = 'APT' ]; then
		sudo apt install --assume-yes snapd
	fi

	snap install core
}


# Start
awk '{gsub("#.*$", "");print}' "$list" > "$bawkpack_cache"

for pm in $pms; do
	if [ -n "$(awk '{print}' "$bawkpack_cache")" ]; then
		case $pm in
			'Pacman')    pm_launcher='sudo pacman --sync --refresh --noconfirm --needed'; pm_mark='PAC' ;;
			'APT')       pm_launcher='sudo apt install --assume-yes'                    ; pm_mark='APT' ;;
			'XBPS')      pm_launcher='sudo xbps-install --sync --yes'                   ; pm_mark='XBP' ;;
			'AUR')       pm_launcher='yay -Sy --nodiffmenu --save'; setup_aur           ; pm_mark='AUR' ;;
			'Flatpak')   pm_launcher='sudo flatpak install'       ; setup_flatpak       ; pm_mark='FLA' ;;
			'Snap')      pm_launcher='sudo snap install'          ; setup_snap          ; pm_mark='SNA' ;;
		esac

		echo "BAWKPACK: installing $pm Packages"
		$pm_launcher $(awk -v FPAT="$pm_mark:[^ ]+" 'NF{ print $1 }' "$bawkpack_cache" | awk "{gsub(\"$pm_mark:\", \"\");print}")

		awk "!/$pm_mark:/" "$bawkpack_cache" > "$bawkpack_cache"
	fi
done


exit 0
#    ______   ____     __    _               ______
#   <  /__ \ ( __ )   / /   (_)___  ___     / / / /
#   / /__/ // __  |  / /   / / __ \/ _ \   / / / /
#  / // __// /_/ /  / /___/ / / / /  __/  /_/_/_/
# /_//____/\____/  /_____/_/_/ /_/\___/  (_|_|_)
