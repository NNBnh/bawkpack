#!/bin/sh

#     ____
#    / __ )            __                  __
#   / __  /__ __    __/ /__ ___  ___ _____/ /__
#  / /_/ / _ `/ |/|/ /  '_// _ \/ _ `/ __/  '_/
# /_____/\_,_/|__,__/_/\_\/ .__/\_,_/\__/_/\_\
#                        /_/

# File:         bawkpack
# Description:  Packages list installer that SuperB
# Author:       NNB
#               └─ https://github.com/NNBnh
# URL:          https://github.com/NNBnh/bawkpack
# License:      GPLv3

#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.


# Values
WD=$PWD
BAWKPACK_LIST=${1:-$BAWKPACK_LIST}; [ ! -f "$BAWKPACK_LIST" ] && echo 'Packages list is not found' && exit 1
BAWKPACK_LOCAL="${XDG_DATA_HOME:-"$HOME/.local/share"}/bawkpack"

if type pacman; then
	packagemanager_main='Pacman'
elif type apt; then
	packagemanager_main='APT'
	sudo apt update  --assume-yes
	sudo apt upgrade --assume-yes
elif type xbps-install; then
	packagemanager_main='XBPS'
	sudo xbps-install --sync --yes --update
	sudo xbps-install --sync --yes void-repo-nonfree void-repo-multilib void-repo-multilib-nonfree void-repo-debug
else
	echo "Packages manager not found"
	exit 1
fi

packagemanager_all='Pacman APT XBPS'
packagemanager_not=${packagemanager_all%%$packagemanager_main}
                                          packagemanager_list="$packagemanager_list packagemanager_main"
                                          packagemanager_list="$packagemanager_list packagemanager_not"
[ "$packagemanager_main"  = 'Pacman' ] && packagemanager_list="$packagemanager_list AUR"
                                          packagemanager_list="$packagemanager_list Flatpak"
[ "$packagemanager_main" != 'XBPS'   ] && packagemanager_list="$packagemanager_list Snap"


# Functions
setup_aur() {
	echo "BAWKPACK: installing YAY"

	sudo pacman --sync --refresh --noconfirm --needed git base-devel
	git clone https://aur.archlinux.org/yay.git "$BAWKPACK_LOCAL/yay"
	cd "$BAWKPACK_LOCAL/yay" || exit 1
	makepkg -si
	cd "$WD" || exit 1
}

setup_flatpak() {
	echo "BAWKPACK: installing Flatpak"

	if   [ $packagemanager_main = 'Pacman' ]; then sudo pacman --sync --refresh --noconfirm --needed flatpak
	elif [ $packagemanager_main = 'APT'    ]; then sudo apt install --assume-yes flatpak gnome-software-plugin-flatpak
	elif [ $packagemanager_main = 'XBPS'   ]; then sudo xbps-install --sync --yes flatpak
	fi

	flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
}

setup_snap() {
	echo "BAWKPACK: installing Snap"

	if   [ $packagemanager_main = 'Pacman' ]; then
		sudo pacman --sync --refresh --noconfirm --needed git

		git clone https://aur.archlinux.org/snapd.git "$BAWKPACK_LOCAL/snap"
		cd "$BAWKPACK_LOCAL/snap" || exit 1
		makepkg -si
		cd "$WD" || exit 1

		sudo systemctl enable --now snapd.socket
		sudo ln -s /var/lib/snapd/snap /snap
	elif [ $packagemanager_main = 'APT' ]; then
		sudo apt install --assume-yes snapd
	fi

	snap install core
}


# Start
bawkpack_cache=$(sed -e 's/#.*$//g' -f "$BAWKPACK_LIST")

for packagemanager in $packagemanager_list; do
	if [ -n "$bawkpack_cache" ]; then
		case $packagemanager in
			'Pacman')  packagemanager_command='sudo pacman --sync --refresh --noconfirm --needed'; packagemanager_mark='PAC:' ;;
			'APT')     packagemanager_command='sudo apt install --assume-yes'                    ; packagemanager_mark='APT:' ;;
			'XBPS')    packagemanager_command='sudo xbps-install --sync --yes'                   ; packagemanager_mark='XBP:' ;;
			'AUR')     packagemanager_command='yay -Sy --nodiffmenu --save'; setup_aur           ; packagemanager_mark='AUR:' ;;
			'Flatpak') packagemanager_command='sudo flatpak install'       ; setup_flatpak       ; packagemanager_mark='FLA:' ;;
			'Snap')    packagemanager_command='sudo snap install'          ; setup_snap          ; packagemanager_mark='SNA:' ;;
		esac

		packages_list=$(printf "$bawkpack_cache" | sed -e "s/^.*$packagemanager_mark//g" -e 's/[[:space:]].*$//g')
		bawkpack_cache=$(printf "$bawkpack_cache" | sed -e "s/$packagemanager_mark//g")

		if [ "*$packagemanager*" != "$packagemanager_not" ]; then
			echo "BAWKPACK: installing $packagemanager Packages"
			$packagemanager_command "$packages_list"
		fi
	fi
done


exit 0 # 128!!!
